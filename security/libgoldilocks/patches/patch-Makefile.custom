$NetBSD$

This is required to enable builds in architecture other than x86_64.

x86 specific gcc flags are applied here.

The upstream as of now "hardcodes" amd64 (x86_64) as the only build option.

ARCH_NAME is now set from configure.ac

--- Makefile.custom.orig	2019-03-11 19:42:59.000000000 +0000
+++ Makefile.custom
@@ -18,6 +18,14 @@ BUILD_IBIN = build/obj/bin
 
 DOXYGEN ?= doxygen
 
+ifeq ($(ARCH_NAME),arch_x86_64)
+ARCHFLAGS += -maes # -mavx2 -mbmi2 #TODO
+endif
+
+ifeq ($(ARCH_NAME),arch_32)
+ARCHFLAGS += -maes # -mavx2 -mbmi2 #TODO
+endif
+
 ifeq ($(UNAME),Darwin)
 CC = clang
 CXX = clang++
@@ -34,7 +42,7 @@ PYTHON ?= python
 WARNFLAGS = -pedantic -Wall -Wextra -Werror -Wunreachable-code \
 	 -Wmissing-declarations -Wunused-function -Wno-overlength-strings $(EXWARN)
 
-INCFLAGS = -Isrc -Isrc/include -I$(BUILD_INC) -Isrc/include/arch_x86_64 -Isrc/arch_x86_64
+INCFLAGS = -Isrc -Isrc/include -I$(BUILD_INC) -Isrc/include/$(ARCH_NAME) -Isrc/$(ARCH_NAME)
 PUB_INCFLAGS = -I$(BUILD_INC)
 LANGFLAGS = -std=c99 -fno-strict-aliasing
 LANGXXFLAGS = -fno-strict-aliasing
@@ -120,11 +128,11 @@ $(BUILD_C)/decaf_tables.c: $(BUILD_IBIN)
 
 $(BUILD_OBJ)/%.o: $(BUILD_C)/%.c $(HEADERS)
 	$(CC) $(CFLAGS) -c -o $@ $< \
-		-I build/obj/ -I src/ -I src/arch_x86_64 -I src/include/arch_x86_64
+		-I build/obj/ -I src/ -I src/$(ARCH_NAME) -I src/include/$(ARCH_NAME)
 
 $(BUILD_OBJ)/goldilocks_gen_tables.o: src/goldilocks_gen_tables.c $(HEADERS)
 	$(CC) $(CFLAGS) \
-		-I build/obj/ -I src -I src/arch_x86_64 -I src/include/arch_x86_64 \
+		-I build/obj/ -I src -I src/$(ARCH_NAME) -I src/include/$(ARCH_NAME) \
 		-c -o $@ $<
 
 
@@ -152,10 +160,10 @@ else
 endif
 
 # $(BUILD_OBJ)/%.o: src/%.c $(HEADERS)
-# 	$(CC) $(CFLAGS) -I src/arch_x86_64 -I src/include/arch_x86_64 \
+# 	$(CC) $(CFLAGS) -I src/$(ARCH_NAME) -I src/include/$(ARCH_NAME) \
 # 	-c -o $@ $<
 
-$(BUILD_OBJ)/%.o: src/arch_x86_64/%.c $(HEADERS)
+$(BUILD_OBJ)/%.o: src/$(ARCH_NAME)/%.c $(HEADERS)
 	$(CC) $(CFLAGS) -c -o $@ $<
 
 $(BUILD_OBJ)/%.o: src/%.c $(HEADERS)
